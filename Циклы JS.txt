Цикл "for":
javascript
Copy code
for (начальное_значение; условие; шаг) {
  // код для выполнения
}
Начальное значение: задает начальное значение счетчика цикла.
Условие: определяет, когда цикл должен выполняться.
Шаг: указывает, как изменяется счетчик на каждой итерации цикла.
Цикл "while":
javascript
Copy code
while (условие) {
  // код для выполнения
}
Условие: определяет, когда цикл должен выполняться.
Цикл "do while":
javascript
Copy code
do {
  // код для выполнения
} while (условие);
Условие: определяет, когда цикл должен выполняться. Цикл "do while" всегда выполнится хотя бы один раз, даже если условие не истинно.
Цикл "for...in":
javascript
Copy code
for (переменная in объект) {
  // код для выполнения
}
Переменная: переменная, которая будет содержать ключи объекта на каждой итерации.
Объект: объект, перебираемый в цикле.
Цикл "for...of":
javascript
Copy code
for (переменная of объект) {
  // код для выполнения
}
Переменная: переменная, которая будет содержать значения объекта на каждой итерации.
Объект: объект, перебираемый в цикле.
Операторы цикла:
break: прерывает выполнение цикла.
continue: переходит к следующей итерации цикла, минуя код после оператора continue.
Вложенные циклы: можно использовать циклы внутри других циклов для выполнения сложных задач.

Полезные методы для работы с массивами:

forEach(): выполняет указанную функцию один раз для каждого элемента массива.
map(): создает новый массив с результатами вызова указанной функции для каждого элемента массива.
filter(): создает новый массив, содержащий элементы, для которых указанная функция возвращает true.
reduce(): применяет функцию-аккумулятор к каждому элементу массива, сводя его к одному значению.
every(): проверяет, удовлетворяют ли все элементы массива указанному условию.
some(): проверяет, удовлетворяет ли хотя бы один элемент массива указанному условию.
find(): возвращает первый элемент массива, удовлетворяющий указанному условию.
findIndex(): возвращает индекс первого элемента массива, удовлетворяющего указанному условию.
Полезные методы для работы со строками:
split(): разбивает строку на массив подстрок на основе указанного разделителя.
join(): объединяет все элементы массива в строку, разделенную указанным разделителем.
Рекурсия: вызов функции из самой себя.